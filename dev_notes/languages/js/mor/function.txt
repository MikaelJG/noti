defining

//old way

function square(x) {
    return x * y; // you always always need the return! Explicit return
}   

square(10);

//ES6

Arrow functions

const square = (x) => {
    return x * x;
};

//shorter with implicit return.

const square = x => x * y;
// one line will not accept anything complex like one line

capitalize.js

const capitalize = (word) => {
    const firstLatter = word[0].toUpperCase();
    const restOfTheWord = word.substring(1).toLowerCase();
    const fullWord = `${firstLetter}${restOfTheWord}`;
    return fullWord;
}

console.log(capitalize("mIdO"));

//mIdO => Mido

Ternary Operator

const raining = true

const getAccessory = raining => raining ? "umbrella" : "sunglasses";

//Only only for simple functions!!

console.log(getAccessory(raining));

//the code is a Pac-Man, it starts at the top and goes down. 

String.length

const name = "Boris";
console.log(name.length);
// => 5

const count = 20;

if (count === 0) {
  console.log('There are no students');
} else if (count === 1) {
  console.log('There is only one student');
} else {
  console.log(`There are ${count} students`);
}

Number.toString()

const number = 42;
console.log(number.toString());
// => "42"

Number.parseInt()

const input = "42";
const number = Number.parseInt(input, 10);
