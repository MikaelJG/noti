A "context" is a set of launch configuration properties (ie: image name, env vars, volume bindings, etc) for launching a docker container, such as:

image: alpine
mounts:
  ~/: /home
  ~/.ssh: /root/.ssh
env:
  GCP_ZONE: us-east1-a
  TZ: $TZ
entrypoint: zsh

The full format is:

# Docker image to launch
image: <string>

# Local directories or files to mount into container (docker --volume flag)
mounts:
  <local dir/file path>: <in container mount dir/file path>
  ...

# Environment variables to pass into container (docker --env flag)
env:
  <variable>: <string>
  ...

# Optional command to execute in container (defaults to "sh").
# Note that this command is also used to open extra sessions
# against already running containers.
entrypoint: <string>

# Optional args that get appended to entrypoint when initially
# starting container. Note that those are ignored when opening
# extra sessions against already running containers.
cmd:
  - <string>
  ...

# Whether to remove container upon exit (docker --rm flag)
remove: <true | false (default)>

# Network name to connect container to (docker --network flag)
network: <string | "host" (default)>

# Individual arguments that will be passed to docker cli as is.
dockerArgs:
  - <string>
  ...

# Optional Dockerfile to build and run
build:
  # Dockerfile to build
  dockerfile: <string>
  # Optional context directory to use for build (defaults to same as Dockerfile)
  context: <string>
  # Optional build arguments to use for build
  args:
    <arg>: <string>
    ...

# Optional variations to prompt user for and that will override base values.
# Overrides can be anything valid at the top level, including sub-variations.
# If multiple variations are defined at the same level, user will be prompted
# to make a choice for each one of them (think of variations as multiple
# questions that user must answer before starting the container).
# Sub-variations within a choice are only prompted to user when that choice is
# selected (think of them as contextual sub-questions).
variations:
  <variation1>:
    <choice1>:
      <overrides>
    <choice2>:
      <overrides>
  <variation2>:
    ...
